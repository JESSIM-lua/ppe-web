@use '../../../common';

.scannedProductContainer {
	display: flex;
	flex-direction: column;
	// justify-content: center;
	// margin: auto;
	align-items: center;
	width: 100%;
	font-size: 25px;
	max-width: 600px;
	height: auto;
	gap: 2px;
	overflow: none;

	.scannedProductQuantityButtonsContainer {
		display: flex;
		justify-content: space-between;
		width: 100%;
		gap: 10px;
		margin-bottom: 10px;
		.scannedProductQuantityInput {
			width: 100%;
			height: 70%;
			text-align: center;
			font-size: 20px;
			border-radius: 6px;
			// border: 1px solid #000000;
			outline: none;
		}

		.scannedProductValidateButton {
			margin: auto;
			font-size: 20px;
			text-align: center;
			display: flex;
			justify-content: center;
			align-items: center;
			width: 60%;
			height: 40px;
			background-color: common.$green;
		}
	}

	.scannedProductCloseButton {
		margin-left: auto;
		margin-bottom: 10px;
		padding: 10px 10px;
	}

	& .deleteQuantity {
		background-color: #fff;
		height: 100%;
		width: 100%;

		> svg {
			width: 50px;
			margin: auto;
		}
	}

	.scannedProductQuantityText {
		font-size: 16px;
		width: 30%;
		padding: 6px;
		border-radius: 6px;
		// border: 1px solid #000000;
		outline: none;
	}

	.scannedProductRestockContainer {
		display: flex;
		justify-content: space-around;
		align-items: center;
		padding: auto;
		font-size: 25px;
		gap: 10px;
		background-color: rgba($color: common.$red, $alpha: 0.5);
		border-radius: 6px;
		button {
			width: 80%;
			height: 40px;
			font-size: 20px;
			background-color: common.$red;
			color: common.$black;
		}

		input[type='checkbox'] {
			/* Add if not using autoprefixer */
			-webkit-appearance: none;
			/* Remove most all native input styles */
			appearance: none;
			/* For iOS < 15 */
			background-color: var(--form-background);
			/* Not removed via appearance */
			margin: 0;

			font: inherit;
			color: currentColor;
			width: 40px;
			height: 40px;
			border: 0.15em solid currentColor;
			border-radius: 0.15em;
			transform: translateY(-0.075sem);

			display: grid;
			place-content: center;
		}

		input[type='checkbox']::before {
			content: '';
			width: 30px;
			height: 30px;
			clip-path: polygon(
				14% 44%,
				0 65%,
				50% 100%,
				100% 16%,
				80% 0%,
				43% 62%
			);
			transform: scale(0);
			transform-origin: bottom left;
			transition: 120ms transform ease-in-out;
			box-shadow: inset 1em 1em var(--form-control-color);
			/* Windows High Contrast Mode */
			background-color: CanvasText;
		}

		input[type='checkbox']:checked::before {
			transform: scale(1);
		}

		input[type='checkbox']:disabled {
			--form-control-color: var(--form-control-disabled);

			color: var(--form-control-disabled);
			cursor: not-allowed;
		}

		> svg {
			width: 50px;
			height: 50px;
		}
	}

	.scannedProductRecommanderCheckboxRestock {
		display: flex;
		justify-content: space-around;
		align-items: center;
		padding: auto;
		font-size: 25px;
		gap: 10px;
		background-color: rgba($color: common.$green, $alpha: 0.5);
		box-shadow: inset 1em 1em var(--form-control-color);

		button {
			width: 100%;
			height: 40px;
			font-size: 20px;
			background-color: common.$green;
			color: common.$black;
		}

		input[type='checkbox'] {
			/* Add if not using autoprefixer */
			-webkit-appearance: none;
			/* Remove most all native input styles */
			appearance: none;
			/* For iOS < 15 */
			background-color: var(--form-background);
			/* Not removed via appearance */
			margin: 0;

			font: inherit;
			color: currentColor;
			width: 40px;
			height: 40px;
			// border: 0.15em solid currentColor;
			border-radius: 0.15em;
			transform: translateY(-0.075sem);

			display: grid;
			place-content: center;
		}

		input[type='checkbox']::before {
			content: '';
			width: 30px;
			height: 30px;
			clip-path: polygon(
				14% 44%,
				0 65%,
				50% 100%,
				100% 16%,
				80% 0%,
				43% 62%
			);
			transform: scale(0);
			transform-origin: bottom left;
			transition: 120ms transform ease-in-out;
			box-shadow: inset 1em 1em var(--form-control-color);
			/* Windows High Contrast Mode */
			background-color: CanvasText;
		}

		input[type='checkbox']:checked::before {
			transform: scale(1);
		}

		input[type='checkbox']:disabled {
			--form-control-color: var(--form-control-disabled);

			color: var(--form-control-disabled);
			cursor: not-allowed;
		}

		> svg {
			width: 50px;
			height: 50px;
		}
	}

	.scannedProductRecommanderContainer {
		.scannedProductRecommanderLabelAndButton {
			display: flex;
			justify-content: space-around;
			align-items: center;
			padding: auto;
			font-size: 25px;
			gap: 10px;
			background-color: rgba($color: common.$grey, $alpha: 0.5);
			border-radius: 6px;
			border: 1px solid #ff0101;
			border-color: #c20000;

			input[type='checkbox'] {
				/* Add if not using autoprefixer */
				-webkit-appearance: none;
				/* Remove most all native input styles */
				appearance: none;
				/* For iOS < 15 */
				background-color: var(--form-background);
				/* Not removed via appearance */
				margin: 0;

				font: inherit;
				color: currentColor;
				width: 40px;
				height: 40px;
				// border: 0.15em solid currentColor;
				border-radius: 0.15em;
				transform: translateY(-0.075sem);

				display: grid;
				place-content: center;
			}

			input[type='checkbox']::before {
				content: '';
				width: 30px;
				height: 30px;
				clip-path: polygon(
					14% 44%,
					0 65%,
					50% 100%,
					100% 16%,
					80% 0%,
					43% 62%
				);
				transform: scale(0);
				transform-origin: bottom left;
				transition: 120ms transform ease-in-out;
				box-shadow: inset 1em 1em var(--form-control-color);
				/* Windows High Contrast Mode */
				background-color: CanvasText;
			}

			input[type='checkbox']:checked::before {
				transform: scale(1);
			}

			input[type='checkbox']:disabled {
				--form-control-color: var(--form-control-disabled);

				color: var(--form-control-disabled);
				cursor: not-allowed;
			}

			> svg {
				width: 50px;
				height: 50px;
			}
		}

		.scannedProductMinimalistText {
			font-size: 12px;
			margin: auto;
		}
	}
}

.closeScannedProductContainer {
	display: flex;
	flex-direction: column;
	font-size: 25px;
	gap: 40px;
	padding: 15px;

	button {
		width: 100%;
		height: 40px;
		font-size: 20px;
		background-color: common.$green;
		color: common.$black;
	}

	.closeScannedProductButtons {
		display: flex;
		justify-content: space-around;
		gap: 20px;

		.closeScannedProductButtonCancel {
			background-color: common.$red;
			color: common.$black;
		}
	}
}

.scannedProductQuantityButtons {
	display: flex;
	gap: 15px;
	justify-content: flex-end;

	.scannedProductQuantityButton {
		padding: 15px;
		color: common.$black;
		background-color: #fff;

		&.deleteQuantity {
			left: 10px;

			> svg {
				margin: auto;
				width: 50px;
			}
		}
	}
}

.scannedProductPopup {
	display: flex;
	justify-content: center;
	width: 100%;
	align-items: center;
	background-color: #ffffff;
	position: absolute;
	z-index: 20;
	top: 20%;
}

.scannedProductPopupOnDelete {
	z-index: 21;
	display: flex;
	justify-content: center;
	height: fit-content;
	background-color: #fff;
}

.scannedProductPopupNullValue {
	display: flex;
	justify-content: center;
	align-items: center;
	width: 100%;
	height: 120px;
	background-color: #c20000;
	color: #fff;
	position: absolute;
	z-index: 21;
	top: 60%;

	button {
		width: 100%;
		height: 40px;
		font-size: 20px;
		background-color: common.$white;
		color: common.$black;
	}
}
